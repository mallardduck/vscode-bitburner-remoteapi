{
  "name": "vscode-bitburner-remoteapi",
  "displayName": "Bitburner Remote API Helper",
  "description": "A Code extension to integrate with BitBurner's Remote API server.",
  "version": "0.0.1",
  "private": "true",
  "repository": "https://github.com/mallardduck/vscode-bitburner-remoteapi",
  "engines": {
    "vscode": "^1.92.0"
  },
  "publisher": "mallardduck",
  "author": {
    "name": "MallardDuck",
    "url": "https://github.com/mallardduck/"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "ext.bitburner-remoteapi.addAuthToken",
        "title": "BitburnerExt: Add Auth Token (For Game API Server)"
      },
      {
        "command": "ext.bitburner-remoteapi.fileWatcher.start",
        "title": "BitburnerExt: Start WebSocket Server"
      },
      {
        "command": "ext.bitburner-remoteapi.fileWatcher.stop",
        "title": "BitburnerExt: Stop WebSocket Server"
      },
      {
        "command": "ext.bitburner-remoteapi.fileWatcher.fetchDefinition",
        "title": "BitburnerExt: Fetch NetScriptDefinitions on the fly (must be connected to game)."
      },
      {
        "command": "ext.bitburner-remoteapi.fileWatcher.pushFile",
        "title": "Bitburner: Push File To The Game"
      },
      {
        "command": "ext.bitburner-remoteapi.fileWatcher.pushAllFiles",
        "title": "Bitburner: Push All Files To The Game"
      },
      {
        "command": "ext.bitburner-remoteapi.fileWatcher.deleteFile",
        "title": "Bitburner: Delete File From The Game"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "ext.bitburner-remoteapi.fileWatcher.pushFile",
          "when": "editorIsOpen"
        },
        {
          "command": "ext.bitburner-remoteapi.fileWatcher.pushAllFiles"
        },
        {
          "command": "ext.bitburner-remoteapi.fileWatcher.deleteFile",
          "when": "editorIsOpen"
        }
      ],
      "editor/context": [
        {
          "command": "ext.bitburner-remoteapi.fileWatcher.pushFile",
          "group": "-1_bitburner-remoteapi@1",
          "when": "editorTextFocus"
        },
        {
          "command": "ext.bitburner-remoteapi.fileWatcher.deleteFile",
          "group": "-1_bitburner-remoteapi@2",
          "when": "editorTextFocus"
        }
      ]
    },
    "configuration": [
      {
        "title": "Bitburner Remote API",
        "properties": {
          "ext-bitburner-remoteapi.syncRoot": {
            "type": "string",
            "default": "./dist/",
            "description": "The root directory of the files you want to push to the game. (Used with both sync methods.)"
          },
          "ext-bitburner-remoteapi.client.authToken": {
            "type": "string",
            "description": "Token generated by the game client for authenticating API access."
          },
          "ext-bitburner-remoteapi.showPushSuccessNotification": {
            "type": "boolean",
            "default": false,
            "description": "Receive notifications whenever a file is pushed with its path and filename. Errors will always show a notification."
          },
          "ext-bitburner-remoteapi.fileWatcher.enable": {
            "title": "Auto-Enable on Workspace Open",
            "type": "boolean",
            "default": false,
            "description": "Enable the file watcher by on start. (This setting will not work if set in global (user) settings, it must be set at the workspace or folder level)"
          },
          "ext-bitburner-remoteapi.fileWatcher.showEnabledNotification": {
            "type": "boolean",
            "default": true,
            "description": "Receive notifications when the FileWatcher is enabled and the path it is watching. Errors will always show a notification."
          },
          "ext-bitburner-remoteapi.fileWatcher.allowedFiletypes": {
            "type": "array",
            "default": [
              ".js",
              ".script",
              ".txt"
            ],
            "description": "Filetypes that are synchronized to the game."
          },
          "ext-bitburner-remoteapi.fileWatcher.allowDeletingFiles": {
            "type": "boolean",
            "default": false,
            "description": "Allow deleting files in game if they get deleted off disk."
          },
          "ext-bitburner-remoteapi.fileWatcher.port": {
            "type": "integer",
            "default": 12525,
            "description": "The port to bind a WebSocket server onto."
          },
          "ext-bitburner-remoteapi.fileWatcher.exclude": {
            "type": "array",
            "default": [
              ".vscode",
              ".idea",
              ".github"
            ],
            "description": "A list of folders or files to exclude from the sync."
          },
          "ext-bitburner-remoteapi.fileWatcher.definitionFile.enabled": {
            "type": "boolean",
            "default": false,
            "description": "Automatically pull the definition file from the game."
          },
          "ext-bitburner-remoteapi.fileWatcher.definitionFile.location": {
            "type": "string",
            "default": "./NetScriptDefinitions.d.ts",
            "description": "Location/name of where the definition file gets placed."
          },
          "ext-bitburner-remoteapi.fileWatcher.pushAllOnConnection": {
            "type": "boolean",
            "default": false,
            "description": "Push all files when initial connection is made."
          }
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "pnpm run package",
    "compile": "pnpm run check-types && pnpm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "pnpm run check-types && pnpm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "pnpm run compile-tests && pnpm run compile && pnpm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "vscode-test",
    "debug": "ts-node ./debug.ts"
  },
  "devDependencies": {
    "@stylistic/eslint-plugin-js": "^2.6.4",
    "@stylistic/eslint-plugin-ts": "^2.6.4",
    "@types/convict": "^6.1.6",
    "@types/mocha": "^10.0.7",
    "@types/node": "~22.5.0",
    "@types/vscode": "^1.92.0",
    "@types/ws": "^8.5.12",
    "@typescript-eslint/eslint-plugin": "^8.2.0",
    "@typescript-eslint/parser": "^8.2.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "esbuild": "^0.23.1",
    "eslint": "^9.9.1",
    "npm-run-all": "^4.1.5",
    "ts-node": "^10.9.2",
    "typescript": "^5.5.4"
  },
  "dependencies": {
    "bufferutil": "^4.0.8",
    "cheap-watch": "^1.0.4",
    "convict": "^6.2.4",
    "fast-glob": "^3.3.2",
    "signal-js": "^3.0.1",
    "ws": "^8.18.0"
  }
}
